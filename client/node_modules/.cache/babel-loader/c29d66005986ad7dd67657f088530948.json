{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from \"../constants/actionTypes\";\n/*\n  The data here is dispatched from actions/posts.js\n*/\n\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n    // case LIKE:\n    //   return posts.map((post) =>\n    //     post._id === action.payload._id ? action.payload : post\n    //   );\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/linhtran/Desktop/Trung/MERN Projects/memory-project/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","posts","action","type","payload","map","post","_id","filter"],"mappings":"AAAA,SACEA,SADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,QAMO,0BANP;AAQA;AACA;AACA;;AACA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,SAAL;AACE,aAAOM,MAAM,CAACE,OAAd;;AACF,SAAKP,MAAL;AACE,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKN,MAAL;AACE,aAAOG,KAAK,CAACI,GAAN,CAAWC,IAAD,IACfA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAD9C,CAAP;;AAGF,SAAKP,MAAL;AACE,aAAOE,KAAK,CAACO,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;AACF;AACA;AACA;AACA;;AACA;AACE,aAAOH,KAAP;AAhBJ;AAkBD,CAnBD","sourcesContent":["import {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n} from \"../constants/actionTypes\";\n\n/*\n  The data here is dispatched from actions/posts.js\n*/\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    // case LIKE:\n    //   return posts.map((post) =>\n    //     post._id === action.payload._id ? action.payload : post\n    //   );\n    default:\n      return posts;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}